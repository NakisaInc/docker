version: '3'

# Any non-empty directory inside a container that is to be persisted must be mapped to a named volume.
# This is because we don't want the empty host directory overwriting a non-empty directory inside the container.
# Named volumes must be removed manually or they will stick around after 'docker stack rm'.
volumes:
  hanelly-data:
  tomcat-conf:
  # need more here for JVM working dirs for all containers that have them in order to persist JVM heap dumps...
  # though Khosrow questioned the value of this

services:

  apache-shib:
    image: nakisa/apache:${NAK_APACSHIB_IMG_TAG}
    depends_on:
      - hanelly
    volumes:
      - /nakisa/app-volumes/apache-www:/var/www/html
      - /nakisa/app-volumes/apache-ssl:/etc/apache2/ssl
      - /nakisa/app-volumes/apache-conf:/etc/apache2/sites-enabled
      - /nakisa/app-volumes/apache-logs:/var/log/apache2
      - /nakisa/app-volumes/apache-shib:/usr/local/shibboleth
    ports:
      - "80:80"
      - "443:443"

  hanelly:
    image: nakisa/hanelly:${NAK_HANELLY_IMG_TAG}
    depends_on:
      - hanelly-db
      - elasticsearch
    volumes:
      - /nakisa/app-volumes/prometheus-agent:/usr/local/tomcat/agent/
      - /nakisa/app-volumes/idocs-data:/nakisa/idocs
      - /nakisa/app-volumes/tomcat-logs:/usr/local/tomcat/logs
      # the following volume is mapped to a named volume because it contains subdirectories and data which we don't want to overwrite
      - hanelly-data:/usr/local/tomcat/webapps/hanelly
      - tomcat-conf:/usr/local/tomcat/conf
    environment:
      JAVA_OPTS: "-Dfile.encoding='UTF-8'"
      CATALINA_OPTS: "-Ddynamic.embedded=false -Ddynamic.host=elasticsearch -Ddynamic.cluster=elasticsearch -Dcluster.standalone=false -Dcluster.discovery.file=WEB-INF/tcp.xml -Djgroups.bind_addr=hanelly -Djava.net.preferIPv4Stack=true -Dnak.authentication.token=${NAK_AUTH_TOKEN} -Dnak.volume.path.idoc=/nakisa/idocs -Dnak.idoc.app.url=http://idoclistener:10002/idoc-listener -Dfile.encoding='UTF-8' ${NAK_HANELLY_MEM_ALLOC}"

  hanelly-db:
    image: mysql:5.7
    volumes:
      - /nakisa/app-volumes/mysql-data:/var/lib/mysql
      - /nakisa/app-volumes/mysql-logs:/var/log/mysql
      - /nakisa/app-volumes/mysql-dump:/var/backups
    # parametrize password in the clear
    environment:
      MYSQL_ROOT_PASSWORD: ${NAK_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: hanelly
      MYSQL_USER: hanelly
      MYSQL_PASSWORD: ${NAK_MYSQL_PASSWORD}

  elasticsearch:
    image: elasticsearch:5.2.0
    volumes:
      # docker copies the contents of each host directory over to the container directory and overwrites it
      - /nakisa/app-volumes/es-data:/usr/share/elasticsearch/data
      - /nakisa/app-volumes/es-logs:/usr/share/elasticsearch/logs
      # the following volume is mapped to a named volume because it contains subdirectories and data which we don't want to overwrite
      #- es-JVM-workingDir:/usr/lib/jvm/java-8-openjdk-amd64/jre
    environment:
      ES_JAVA_OPTS: "${NAK_ES_MEM_ALLOC}"
    # need to disable swap for ES as per: but seems to crash ES https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html
    command: elasticsearch -Enetwork.bind_host=0.0.0.0 -Enetwork.publish_host=elasticsearch -Ecluster.name=elasticsearch -Escript.inline=true -Escript.stored=true -Escript.max_compilations_per_minute=100000
    # ensure data, logs and JVM working directory are mapped externally to container for data persistence and problem troubleshooting post crash

  idoclistener:
    image: nakisa/tools:${NAK_IDOC_IMG_TAG}
    depends_on:
      - hanelly
    volumes:
      - /nakisa/app-volumes/idocs-data:/data
      - /nakisa/app-volumes/idocs-logs:/idoc-listener/logs
    environment:
      nak.app.url: "http://hanelly:8080/hanelly/app"
      nak.volume.path.idoc: "/data"
      nak.authentication.token: "${NAK_AUTH_TOKEN}"
      nak.app.user.role : "NAKISA_ADMIN_LEVEL_3"
